name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/roborio-cross-ubuntu:2025-22.04
            artifact-name: Codex-Athena
            build-options: "-Ponlylinuxathena"
          - container: wpilib/raspbian-cross-ubuntu:bookworm-22.04
            artifact-name: Codex-Arm32
            build-options: "-Ponlylinuxarm32"
          - container: wpilib/aarch64-cross-ubuntu:bookworm-22.04
            artifact-name: Codex-Arm64
            build-options: "-Ponlylinuxarm64"
          - container: wpilib/ubuntu-base:22.04
            artifact-name: Codex-Linux
            build-options: "-Ponlylinuxx86-64"
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ubuntu-22.04
    container: ${{ matrix.container }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Fetch all history and metadata
        run: |
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - name: Build with Gradle
        run: ./gradlew build ${{ matrix.build-options }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: build/allOutputs

  build-host:
    env:
      MACOSX_DEPLOYMENT_TARGET: 13.3
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            artifact-name: Codex-Win64
            architecture: x64
          - os: macos-14
            artifact-name: Codex-macOS
            architecture: aarch64
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Fetch all history and metadata
        run: git fetch --prune --unshallow

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: ${{ matrix.architecture }}

      - name: Build with Gradle
        run: ./gradlew build -Pbuildalldesktop

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: build/allOutputs

  combine:
    name: Combine
    needs: [build-docker, build-host]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout build-tools
        uses: actions/checkout@v4
        with:
          repository: wpilibsuite/build-tools

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: combiner/products/build/allOutputs

      - name: Flatten Artifacts
        run: rsync -a --delete combiner/products/build/allOutputs/*/* combiner/products/build/allOutputs/

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Combine
        # if: |
        #   !startsWith(github.ref, 'refs/tags/v')
        run: ./gradlew publish -Pthirdparty
        working-directory: combiner
      # - name: Combine (Release)
      #   if: |
      #     github.repository_owner == 'wpilibsuite' &&
      #     startsWith(github.ref, 'refs/tags/v')
      #   run: |
      #     ./gradlew publish -Pthirdparty
      #   working-directory: combiner
      #   env:
      #     RUN_AZURE_ARTIFACTORY_RELEASE: 'TRUE'
      #     ARTIFACTORY_PUBLISH_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      #     ARTIFACTORY_PUBLISH_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Maven
          path: ~/releases
